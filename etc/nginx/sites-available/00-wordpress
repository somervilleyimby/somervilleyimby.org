# Upstream to abstract backend connection(s) for php
upstream wordpress {
  server                     127.0.0.1:9000;
}

server {
  listen                      80;
  listen                      [::]:80;
  server_name                 somervilleyimby.org www.somervilleyimby.org;
  server_tokens               off;

  access_log /var/log/nginx/somervilleyimby.org.access.log;
  error_log  /var/log/nginx/somervilleyimby.org.error.log;

  #                           This is needed for Let's Encrypt.
  location /.well-known/acme-challenge/ {
    root                      /var/www;
  }

  location / {
    return                    301 https://somervilleyimby.org$request_uri;
  }
}

server {
  listen                      443 ssl http2;
  listen                      [::]:443 ssl http2 ipv6only=on;
  server_name                 somervilleyimby.org www.somervilleyimby.org;
  server_tokens               off;

  access_log /var/log/nginx/somervilleyimby.org.access.log;
  error_log  /var/log/nginx/somervilleyimby.org.error.log;

  root                          /var/www/html;

  ##                            This should be in your http block and if it is, it's not needed here.
  index                         index.php;

  client_max_body_size          0;

  ssl_certificate               /etc/letsencrypt/live/somervilleyimby.org/fullchain.pem; # managed by Certbot
  ssl_certificate_key           /etc/letsencrypt/live/somervilleyimby.org/privkey.pem; # managed by Certbot
  include                       /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam                   /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

  #                           add_header Strict-Transport-Security "max-age=63072000;";
  #                           ssl_stapling on;
  #                           ssl_stapling_verify on;

  #                          Global restrictions configuration file.
  #                          Designed to be included in any server {} block.</p>
  location = /favicon.ico {
    log_not_found            off;
    access_log               off;
  }

  location = /robots.txt {
    allow                    all;
    log_not_found            off;
    access_log               off;
  }

  #                          Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
  location ~ /\. {
    deny                     all;
    access_log               off;
    log_not_found            off;
  }

  location / {
    proxy_set_header         Host $http_host;
    proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header         X-Forwarded-Proto https;
    proxy_set_header         X-Real-IP $remote_addr;
    try_files                $uri $uri/ /index.php$is_args$args;
  }

  location ~ \.php$ {
    proxy_set_header         Host $http_host;
    proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header         X-Forwarded-Proto https;
    proxy_set_header         X-Real-IP $remote_addr;
    try_files                $uri =404;
    fastcgi_split_path_info  ^(.+\.php)(/.+)$;
    fastcgi_pass             wordpress;
    fastcgi_index            index.php;
    include                  fastcgi_params;
    fastcgi_param            SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param            PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires                  max;
    log_not_found            off;
  }
}
